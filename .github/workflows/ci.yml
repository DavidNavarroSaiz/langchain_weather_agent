name: Weather Agent CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov black isort
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
        echo "MONGO_URI=mongodb://localhost:27017" >> .env
        echo "MONGO_DB=weather_agent_test" >> .env
        echo "MONGO_COLLECTION=chat_history_test" >> .env
        echo "MONGO_USER_COLLECTION=users_test" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET || 'test_secret_key' }}" >> .env
        echo "JWT_ALGORITHM=HS256" >> .env
        echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY || 'dummy_key' }}" >> .env
        
    - name: Lint with black and isort
      run: |
        black --check .
        isort --check-only --profile black .
        
    - name: Test with pytest
      run: |
        pytest --cov=. --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: weather-agent:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 